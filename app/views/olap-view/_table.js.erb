(function(){
    function draw<%= id %>() {
        var name = 'table';
        var data = new google.visualization.DataTable();

        <%= olap_view_filling_table data, properties[:dimension], (properties[:measures] || []) %>

        var chart = new google.visualization.Table(document.getElementById('<%= id %>'));

        var default_options = {
            allowHtml: true,
            width: '100%'
        };

        <%= properties[:function] && properties[:function].html_safe %>

        chart.draw(data, $.extend(true, default_options, <%= properties[:options] ? "JSON.parse('#{properties[:options].to_json}')".html_safe : '{}' %>));

        <%= "rowSpan('#{id}');".html_safe if properties[:rowspan] == true %>
        <%= "total(data);".html_safe if properties[:total] == true %>
        addClassToTh(data);
    }

    function addClassToTh(data){
        $('#<%= id %> table th').each(function(i, element){
            $(this).addClass(data.getColumnProperties(i).type);
        });
    }

    function rowSpan(id){
        var rows = $('#'+ id +' table tbody tr');

        var dimensions_prev;
        $.each(rows, function(i, row){
            var dimensions = $(row).find('td.dimension');
            var can_update = true;
            $.each(dimensions, function(j, dimension){
                var dimension = $(dimension);

                if (dimensions_prev != undefined){
                    if (dimension.html() != $(dimensions_prev[j]).html()){
                        can_update = false;
                    }
                    if(can_update){
                        dimension.addClass('delete_cell');
                        dimension.css({
                            color: 'transparent',
                            backgroundColor: $(dimensions_prev[j]).css('background-color'),
                            'border-top-style': 'none',
                            'border-bottom-style': 'none'
                        });
                    } else {
                        $(dimensions_prev[j]).css({'border-bottom-style': 'solid'});
                        $(dimension).css({'border-bottom-style': 'none'});
                    }
                } else {
                    dimension.css({'border-bottom-style': 'none'});
                }
            });
            dimensions_prev = dimensions;
        });
        rows.last().find("td.dimension").css({'border-bottom-style': 'solid'});
        rows.find('.delete_cell').html('');
    }

    function total(data){
        var values_sum = [];
        for (var i = 0; i < data.getNumberOfColumns(); i++) {
            if (data.getColumnProperties(i).type == "measure") {
                var sum = 0;
                for (var j = 0; j < data.getNumberOfRows(); j++) {
                    sum += data.getValue(j, i);
                }
                values_sum[values_sum.length] = {v: parseFloat(sum.toFixed(2)), p: {className: "google-visualization-table-td measure total"}};
            } else {
                values_sum[values_sum.length] = {v: '', p: {className: "google-visualization-table-td dimension total"}};
            }
        }
        values_sum[0].v = '<%= escape_javascript olap_view_i18n_options[:total] %>';

        var html = "<thead><tr>";
        for (var i = 0; i < values_sum.length; i++){
            html += "<th class='"+ values_sum[i].p.className +"'>"+ values_sum[i].v +"</th>";
        }
        html += "</tr></thead>";
        $('#<%= id %> table').append(html);
    }

    google.load("visualization", "1", {
        "packages": ["table"],
        'language': 'ru',
        "callback" : function(){
            draw<%= id %>();
        }});
}());